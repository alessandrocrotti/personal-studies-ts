# Gli esempi seguenti usano l'utente "alessandro" creato appositamente per questi test. L'utente di default del minikube Ã¨ "minikube".
# Crea un ClusterRole e un ClusterRoleBinding per l'utente "alessandro" che gli consente di gestire i pod e i servizi in tutto il cluster.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-editor
rules:
  # Permesso fondamentale per gestire i namespaces e quindi usare "kubens"
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
  # - apiGroups: [""]
  #   resources: ["pods", "services"]
  #   verbs: ["get", "list", "watch", "create", "update", "delete"]
  # - apiGroups: ["apps"]
  #   resources: ["deployments"]
  #   verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alessandro-cluster-access
subjects:
  - kind: User
    name: alessandro
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-editor
  apiGroup: rbac.authorization.k8s.io
